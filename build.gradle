plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

version = "${project.mod_version}+${stonecutter.current.version}"
group = project.maven_group

repositories {}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${stonecutter.current.project}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${property("deps.fabric_loader")}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${property("deps.fabric_api")}"
    }

processResources {
    inputs.property "version", project.mod_version
    inputs.property "minecraft", stonecutter.current.version
    inputs.property "loader_version", project.property("deps.fabric_loader")
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.mod_version,
                "minecraft": stonecutter.current.version,
                "loader_version": project.property("deps.fabric_loader")
    }

}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

